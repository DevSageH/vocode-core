[tool.poetry]
name = "vocode"
version = "0.1.114a2"
description = "The all-in-one voice SDK"
authors = ["Ajay Raj <ajay@vocode.dev>"]
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/vocodedev/vocode-python"


[tool.poetry.dependencies]
python = ">=3.10,<4.0"
aiohttp = "^3.11.9"
anthropic = "^0.40.0"
azure-cognitiveservices-speech = "^1.41.1"
elevenlabs = "^1.13.3"
fastapi = "^0.115.6"
janus = "^1.1.0"
jinja2 = "^3.1.4"
jsonschema = "^4.23.0"
loguru = "^0.7.2"
miniaudio = "^1.61.0"
numpy = "^1.26.4"
openai = "^1.56.2"
opentelemetry-sdk = "^1.28.2"
phonenumbers = "^8.13.51"
pydantic = "^2.9.2"
pydantic-settings = "^2.6.1"
pydub = "^0.25.1"
pyht = "^0.1.8"
redis = "^5.2.0"
requests = "^2.32.3"
sentry-sdk = { extras = ["fastapi"], version = "^2.19.0" }
sounddevice = "^0.5.1"
tiktoken = "^0.8.0"
uvicorn = "^0.32.1"
websockets = "^13.1"
nltk = "^3.9.1"

# LLM Providers
groq = { version = "^0.13.0", optional = true }

# Synthesizers
google-cloud-texttospeech = { version = "^2.21.1", optional = true }
pvkoala = { version = "^2.0.2", optional = true }
cartesia = {version = "^1.3.1", optional = true}

# Transcribers
google-cloud-speech = { version = "^2.28.1", optional = true }

# Telephony
twilio = { version = "^9.3.7", optional = true }
vonage = { version = "^4.1.1", optional = true }

# Langchain
langchain = { version = "0.3.9", optional = true }
langchain-community = { version = "^0.3.9", optional = true }
langchain-openai = { version = "^0.2.11", optional = true }
langchain-anthropic = { version = "^0.3.0", optional = true }
langchain-google-vertexai = { version = "^2.0.8", optional = true }

# LiveKit
livekit = { version = "^0.18.1", optional = true }
langfuse = "^2.55.0"
python-multipart = "^0.0.19"
scipy = "^1.14.1"

[tool.poetry.group.lint.dependencies]
black = "^24.10.0"
isort = "^5.13.2"

[tool.poetry.group.typing.dependencies]
mypy = "^1.13.0"
pydub-stubs = "^0.25.1.5"
types-redis = "^4.6.0.20241004"
types-regex = "^2024.11.6.20241108"
types-requests = "^2.32.0.20241016"

[tool.poetry.group.dev.dependencies]
aioresponses = "^0.7.7"
coverage = "^7.6.8"
fakeredis = "^2.26.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
pytest-env = "^1.1.5"
pytest-httpx = "^0.34.0"
pytest-mock = "^3.14.0"

[tool.poetry.extras]
synthesizers = [
    "google-cloud-texttospeech",
    "pvkoala",
    "cartesia",
]
transcribers = ["google-cloud-speech"]
telephony = ["twilio", "vonage"]
langchain = ["langchain", "langchain-community"]
langchain-extras = ["langchain-openai", "langchain-anthropic", "langchain-google-vertexai"]
all = [
    "google-cloud-texttospeech",
    "pvkoala",
    "google-cloud-speech",
    "twilio",
    "vonage",
    "langchain",
    "langchain-community",
    "langchain-openai",
    "langchain-anthropic",
    "langchain-google-vertexai",
    "cartesia",
    "groq",
    "livekit"
]

[tool.mypy]
ignore_missing_imports = true
exclude = ["venv", ".venv"]
explicit_package_bases = true


[tool.pytest.ini_options]
addopts = "--basetemp=/tmp/pytest"
testpaths = ["tests"]

[tool.pytest_env]
ENVIRONMENT = "test"
AZURE_OPENAI_API_BASE_EAST_US = "https://api.openai.com"
AZURE_OPENAI_API_KEY_EAST_US = "test"


[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
